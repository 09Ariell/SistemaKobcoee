/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.1
 * Generated at: 2024-12-05 13:08:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import logica.Controlador;
import java.util.List;
import logica.Ropa;
import logica.Carrito;
import logica.User;
import logica.Ropa;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;

public final class detalleProducto_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/componentes/footerContent.jsp", Long.valueOf(1732378497000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1732398734994L));
    _jspx_dependants.put("/componentes/footer.jsp", Long.valueOf(1732378498000L));
    _jspx_dependants.put("/componentes/headerContent.jsp", Long.valueOf(1733345375207L));
    _jspx_dependants.put("/componentes/header.jsp", Long.valueOf(1733340871901L));
    _jspx_dependants.put("jar:file:/C:/Users/tobar/OneDrive/Escritorio/Proyecto/target/mavenproject1-1.0-SNAPSHOT/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c.tld", Long.valueOf(1664464278000L));
    _jspx_dependants.put("/componentes/head.jsp", Long.valueOf(1733345968910L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(11);
    _jspx_imports_classes.add("logica.User");
    _jspx_imports_classes.add("logica.Controlador");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("logica.Ropa");
    _jspx_imports_classes.add("logica.Carrito");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"css/styles.css\">\n");
      out.write("<head>\n");
      out.write("    <style>\n");
      out.write("        .header-content {\n");
      out.write("        color: white; /* Asegúrate de que el texto sea legible */\n");
      out.write("        font-size: 3rem;\n");
      out.write("        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7); /* Agrega sombra para mayor contraste */\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .header-container {\n");
      out.write("        width: 100%;\n");
      out.write("        height: 400px;\n");
      out.write("        background: url('img/imagenfondo.jpg') no-repeat center center;\n");
      out.write("        background-size: cover; /* Para ajustar la imagen */\n");
      out.write("        display: flex;\n");
      out.write("        justify-content: center;\n");
      out.write("        align-items: center;\n");
      out.write("        position: relative;\n");
      out.write("    }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<html>\n");
      out.write("    <div class=\"header-container\">\n");
      out.write("        <div class=\"header-content\">\n");
      out.write("            <h1>KOBCOEE</h1>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</html>\n");
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\"/>\n");
      out.write("    <title>KOBCOEE</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"styles.css\" />\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"logo-container\">\n");
      out.write("        <img src=\"img/png.png\" alt=\"Logo de KOBCOEE\" class=\"logo\">\n");
      out.write("        <h1 id=\"nombreEsq\">KOBCOEE</h1>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"container\">\n");
      out.write("<body>\n");
      out.write("\n");
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/styles.css\">\n");

    User currentUser = (User) session.getAttribute("currentUser");
    String role = "";
    if (currentUser != null) {
        role = currentUser.getRole();
    }
    Carrito carrito = (Carrito) session.getAttribute("carrito");
    double total = 0;
    if (carrito != null) {
        for (Map.Entry<Ropa, Integer> entry : carrito.getRopas().entrySet()) {
            total += entry.getKey().getPrecio() * entry.getValue(); 
        }
    }
    DecimalFormat df = new DecimalFormat("0.00");

      out.write("\n");
      out.write("\n");
      out.write("<nav class=\"navbar\">\n");
      out.write("    <ul class=\"nav-menu\">\n");
      out.write("        <li><a href=\"index.jsp\">Inicio</a></li>\n");
      out.write("        <li><a href=\"https://www.instagram.com/kobcoee_/\">Instagram</a></li>\n");
      out.write("        <li><a href=\"mailto:coee1x1490@gmail.com\">Correo electrónico</a></li>\n");
      out.write("        <li><a href=\"acercaDe.jsp\">Acerca de</a></li>\n");
      out.write("           \n");
      out.write("        ");
 if (currentUser == null) { 
      out.write("\n");
      out.write("            <li><a href=\"login.jsp\">Iniciar Sesión</a></li>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("        ");
 if (currentUser != null) { 
      out.write("\n");
      out.write("            <li><a href=\"LogoutServlet\">Cerrar Sesión</a></li>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("    </ul>\n");
      out.write("        \n");
      out.write("    <div class=\"nav-icons\">\n");
      out.write("        ");
 if (currentUser != null) { 
      out.write("\n");
      out.write("            <a href=\"detallesUsuario.jsp\">\n");
      out.write("            <img src=\"img/usuario.png\" alt=\"Usuario\" class=\"nav-logo\">\n");
      out.write("            </a>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("        <img src=\"img/carrito.png\" alt=\"Carrito\" class=\"nav-logo\" onclick=\"toggleCart()\">\n");
      out.write("    </div>\n");
      out.write("    <div id=\"cartWindow\" class=\"cart-window\">\n");
      out.write("         <div class=\"cart-content\">\n");
      out.write("            <h2>Tu Carrito</h2>\n");
      out.write("            ");
 if (carrito != null && !carrito.getRopas().isEmpty()) { 
      out.write("\n");
      out.write("                <ul id=\"cartItems\">\n");
      out.write("                    ");
 
                        for (Map.Entry<Ropa, Integer> entry : carrito.getRopas().entrySet()) {
                            Ropa ropa = entry.getKey();
                            int quantity = entry.getValue();
                    
      out.write("\n");
      out.write("                        <li>\n");
      out.write("                            <img src=\"");
      out.print( ropa.getImagen() );
      out.write("\" alt=\"");
      out.print( ropa.getNombre() );
      out.write("\" width=\"50\">\n");
      out.write("                            ");
      out.print( ropa.getNombre() );
      out.write(" - Talla: ");
      out.print( ropa.getTalla() );
      out.write(" - Color: ");
      out.print( ropa.getColor() );
      out.write("<br>\n");
      out.write("                            Precio unitario: $");
      out.print( df.format(ropa.getPrecio()) );
      out.write("<br>\n");
      out.write("                            Cantidad: ");
      out.print( quantity );
      out.write("\n");
      out.write("                            <a href=\"EliminardelCarritoServlet?id=");
      out.print( ropa.getId() );
      out.write("\" class=\"eliminarProducto\">\n");
      out.write("                               <img src=\"img/x.png\" alt=\"Eliminar\" width=\"13\">\n");
      out.write("                            </a>\n");
      out.write("                        </li>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                </ul>\n");
      out.write("                <hr>\n");
      out.write("                <p><strong>Total: $");
      out.print( df.format(total) );
      out.write("</strong></p>\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("                <p>Tu carrito está vacío.</p>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("            <button onclick=\"window.location.href='venta.jsp'\">Ir a Comprar</button>\n");
      out.write("            <button id=\"cerrarCarrito\" onclick=\"toggleCart()\">Cerrar</button>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</nav>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    function toggleCart() {\n");
      out.write("        var cartWindow = document.getElementById('cartWindow');\n");
      out.write("        cartWindow.classList.toggle('open');\n");
      out.write("    }\n");
      out.write("</script>");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"clearfix\"></div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<section id=\"content\" class=\"product-detail\">\n");
      out.write("    ");

        Controlador controlador = new Controlador();
        String idParam = request.getParameter("id");
        int id = Integer.parseInt(idParam);
        Ropa ropa = controlador.validarRopa(id); 
        int stockDisponible = ropa.getStock(); 
        String error = request.getParameter("error"); 
        int cantidadEnCarrito = carrito != null ? carrito.getCantidad(ropa) : 0; 
        boolean hayStockDisponible = cantidadEnCarrito < stockDisponible; 
    
      out.write("\n");
      out.write("    <div class=\"product-detail-container\">\n");
      out.write("        <div class=\"product-image\">\n");
      out.write("            <img src=\"");
      out.print( ropa.getImagen() );
      out.write("\" alt=\"");
      out.print( ropa.getNombre() );
      out.write("\" class=\"detail-img\">\n");
      out.write("        </div>\n");
      out.write("        <div class=\"product-info\">\n");
      out.write("            <h2>");
      out.print( ropa.getNombre() );
      out.write("</h2>\n");
      out.write("            <p><strong>Descripción:</strong> ");
      out.print( ropa.getDescripcion() );
      out.write("</p>\n");
      out.write("            <p><strong>Tipo:</strong> ");
      out.print( ropa.getTipo() );
      out.write("</p>\n");
      out.write("            <p><strong>Color:</strong> ");
      out.print( ropa.getColor() );
      out.write("</p>\n");
      out.write("            <p><strong>Talla:</strong> ");
      out.print( ropa.getTalla() );
      out.write("</p>\n");
      out.write("            <p><strong>Stock disponible:</strong> ");
      out.print( stockDisponible );
      out.write("</p>\n");
      out.write("            <p><strong>Precio:</strong> ");
      out.print( ropa.getPrecio() + "$" );
      out.write("</p>\n");
      out.write("\n");
      out.write("            ");
 if ("stock".equals(error)) { 
      out.write("\n");
      out.write("                <p class=\"alert\">Lo sentimos, este producto está agotado y no se puede añadir más al carrito.</p>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("            ");
 if (session.getAttribute("currentUser") == null) { 
      out.write("\n");
      out.write("                <p class=\"alert\">Inicia sesión para añadir este producto al carrito.</p>\n");
      out.write("                <a href=\"login.jsp\" class=\"btn-login\">Iniciar sesión</a>\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("                <form action=\"AniadirCarritoServlet\" method=\"post\">\n");
      out.write("                    <input type=\"hidden\" name=\"id\" value=\"");
      out.print( ropa.getId() );
      out.write("\">\n");
      out.write("                    <button type=\"submit\" class=\"btn-add-to-cart\" ");
      out.print( !hayStockDisponible ? "disabled" : "" );
      out.write(">\n");
      out.write("                        ");
      out.print( hayStockDisponible ? "Añadir al Carrito" : "Agotado" );
      out.write("\n");
      out.write("                    </button>\n");
      out.write("                </form>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <a href=\"index.jsp\" class=\"btn-back\">Volver al listado</a>\n");
      out.write("</section>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<footer>\n");
      out.write("    KOBCOEE WEB &copy; 2024\n");
      out.write("</footer>\n");
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("    </div> \n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write('\n');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
